class Field:
    def __init__(self, value=None):
        self.value = value

    def __repr__(self):
        return str(self.value)

class Name(Field):
    pass

class Phone(Field):
    def __init__(self, value=None):
        if value is None:
            value = []
        super().__init__(value)

    def add_number(self, number):
        self.value.append(number)

    def remove_number(self, number):
        self.value.remove(number)

class Record:
    def __init__(self, name, *phones):
        self.name = name
        self.phones = list(phones)
        self.fields = [name] + list(phones)
    
    def add_phone(self, phone):
        self.phones.append(phone)

    def remove_phone(self, phone):
        self.phones.remove(phone)

    def edit_phone(self, old_phone, new_phone):
        index = self.phones.index(old_phone)
        self.phones[index] = new_phone

    def __repr__(self):
        return f"Record(name={self.name}, phones={self.phones})"

class AddressBook:
    def __init__(self):
        self.data = {}
    
    def __getitem__(self, name):
        return self.data[name]

    def add_record(self, record):
        self.data[record.name.value] = record

    def remove_record(self, name):
        del self.data[name]

    def search_records(self, **criteria):
        results = []
        for record in self.data.values():
            match = True
            for field, value in criteria.items():
                if field == "name":
                    if record.name.value != value:
                        match = False
                        break
                elif field == "phone":
                    if value not in [str(phone) for phone in record.phones]:
                        match = False
                        break
            if match:
                results.append(record)
        return results 


if __name__ == "__main__":
    name = Name('Bill')
    phone = Phone('1234567890')
    rec = Record(name, phone)
    ab = AddressBook()
    ab.add_record(rec)
    assert isinstance(ab['Bill'], Record)
    assert isinstance(ab['Bill'].name, Name)
    assert isinstance(ab['Bill'].fields, list)
    assert isinstance(ab['Bill'].fields[0], Name)
    assert isinstance(ab['Bill'].fields[1], Phone)
    assert ab['Bill'].fields[1].value == '1234567890' 
    print('All Ok)')

